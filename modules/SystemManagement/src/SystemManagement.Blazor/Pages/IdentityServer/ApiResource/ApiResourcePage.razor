@page "/identityServer/apiResources"
@using global::SystemManagement.Permissions
@using Microsoft.AspNetCore.Components
@using SystemManagement.IdentityServer
@inherits EasyTable<IApiResourceAppService,ApiResourceOutput,Guid,PagingApiRseourceListInput,CreateApiResourceInput,UpdateApiResourceInput>
@attribute [Authorize(SystemManagementPermissions.IdentityServer.ApiResource.Default)]
@using SystemManagement.IdentityServer.ApiScopes
@using SystemManagement.IdentityServer.ApiScopes.Dtos
@using SystemManagement.IdentityServer.Dtos
@using Console = System.Console
<Table
    TItem=ApiResourceOutput
    AutoGenerateColumns="false"
    IsMultipleSelect="true"
    ShowSkeleton="true"
    ShowLoading="true"
    ShowSearch="true"
    IsStriped="true"
    IsBordered="true"
    ShowExtendButtons="true"
    ShowLineNo="true"
    ShowDefaultButtons="true"
    IsPagination="true"
    PageItemsSource="PageItemsSource" ShowToolbar="true"
    EditDialogRowType="RowType.Inline"
       ShowAddButton="@HasCreatePermission"
           ShowEditButton="@HasUpdatePermission"
           ShowDeleteButton="@HasDeletePermission"
    OnSaveAsync="OnSaveAsync" OnDeleteAsync="OnDeleteAsync"
    OnQueryAsync="OnQueryAsync">
    <TableColumns>
        <TableColumn @bind-Field="@context.Name" IsReadonlyWhenEdit="true" Text="@L["Name"]"/>
        <TableColumn @bind-Field="@context.DisplayName" Text="@L["DisplayName"]"/>
        <TableColumn @bind-Field="@context.Enabled" Text="@L["Enabled"]"/>
        <TableColumn @bind-Field="@context.AllowedAccessTokenSigningAlgorithms" Text="@L["AllowedAccessTokenSigningAlgorithms"]"/>
        <TableColumn @bind-Field="@context.ShowInDiscoveryDocument" Text="@L["ShowInDiscoveryDocument"]"/>
        <TableColumn @bind-Field="@context.Description" Text="@L["Description"]"/>
    </TableColumns>
    <EditTemplate>
        <AddUpdateApiResource Context="@context"></AddUpdateApiResource>
    </EditTemplate>
</Table>

@code {
    protected override Task OnInitializedAsync()
    {
        this.CreatePolicyName = Permissions.SystemManagementPermissions.IdentityServer.ApiResource.Create;
        this.UpdatePolicyName = Permissions.SystemManagementPermissions.IdentityServer.ApiResource.Update;
        this.DeletePolicyName = Permissions.SystemManagementPermissions.IdentityServer.ApiResource.Delete;
        return base.OnInitializedAsync();
    }
  

}